/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        tap200: tap200 {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP200";
            bindings = <&none>, <&none>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <37 39 40 13 14 15 16 19 20 21 22>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <10>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q        &kp W           &kp E           &kp R             &kp T                 &kp Y        &kp U         &kp I            &kp O           &kp P                &kp BSPC
&kp LCTRL  &mt LCTRL A  &mt LEFT_ALT S  &mt LEFT_GUI D  &mt LEFT_SHIFT F  &kp G                 &kp H        &mt RSHIFT J  &mt RIGHT_GUI K  &mt LEFT_ALT L  &mt RCTRL SEMICOLON  &kp SQT
&kp LSHFT  &kp Z        &kp X           &kp C           &kp V             &kp B                 &kp N        &kp M         &kp COMMA        &kp DOT         &kp FSLH             &kp ESC
                                        &kp TAB         &lt 3 ESCAPE      &mt LEFT_GUI SPACE    &lt 2 ENTER  &lt 1 DELETE  &kp BACKSPACE
            >;
        };

        number-layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1           &kp N2        &kp N3        &kp N4      &kp N5         &kp N6     &kp N7         &kp N8        &kp N9                &kp N0                 &kp BSPC
&bt BT_CLR  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&kp LSHFT   &bt BT_SEL 0     &bt BT_SEL 1  &bt BT_SEL 2  &trans      &trans         &trans     &trans         &trans        &trans                &trans                 &trans
                                           &trans        &trans      &trans         &trans     &trans         &trans
            >;
        };

        arrow-layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &kp C_VOLUME_UP      &trans                  &trans                       &kp UP_ARROW  &trans                  &trans                  &trans
&trans  &trans  &trans  &trans  &trans  &kp C_VOLUME_DOWN    &trans                  &kp LEFT                     &kp DOWN      &kp RIGHT               &trans                  &trans
&trans  &trans  &trans  &trans  &trans  &kp K_MUTE           &mt RIGHT_GUI LG(LEFT)  &mt LEFT_GUI LA(LEFT_ARROW)  &trans        &mt LEFT_GUI LA(RIGHT)  &mt LEFT_GUI RG(RIGHT)  &trans
                        &trans  &trans  &trans               &trans                  &trans                       &trans
            >;
        };

        symbol-layer {
            bindings = <
&trans  &trans           &kp LESS_THAN  &kp GREATER_THAN  &kp BACKSLASH  &kp GRAVE         &kp AMPERSAND  &trans      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans            &trans
&trans  &kp EXCLAMATION  &kp MINUS      &kp PLUS          &kp EQUAL      &kp HASH          &kp PIPE       &kp COLON   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp SINGLE_QUOTE  &trans
&trans  &trans           &kp SLASH      &kp ASTERISK      &kp CARET      &kp UNDERSCORE    &kp TILDE      &kp DOLLAR  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans            &trans
                                        &trans            &trans         &trans            &trans         &trans      &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };
    };
};
